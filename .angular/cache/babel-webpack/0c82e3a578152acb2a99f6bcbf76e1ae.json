{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nconst _c0 = [\"canvas\"];\nexport let ColorSliderComponent = /*#__PURE__*/(() => {\n  class ColorSliderComponent {\n    constructor() {\n      this.color = new EventEmitter();\n      this.mousedown = false;\n    }\n\n    ngAfterViewInit() {\n      this.draw();\n    }\n\n    draw() {\n      if (!this.ctx) {\n        this.ctx = this.canvas.nativeElement.getContext('2d');\n      }\n\n      const width = this.canvas.nativeElement.width;\n      const height = this.canvas.nativeElement.height;\n      this.ctx.clearRect(0, 0, width, height);\n      const gradient = this.ctx.createLinearGradient(0, 0, 0, height);\n      gradient.addColorStop(0, 'rgba(255, 0, 0, 1)');\n      gradient.addColorStop(0.17, 'rgba(255, 255, 0, 1)');\n      gradient.addColorStop(0.34, 'rgba(0, 255, 0, 1)');\n      gradient.addColorStop(0.51, 'rgba(0, 255, 255, 1)');\n      gradient.addColorStop(0.68, 'rgba(0, 0, 255, 1)');\n      gradient.addColorStop(0.85, 'rgba(255, 0, 255, 1)');\n      gradient.addColorStop(1, 'rgba(255, 0, 0, 1)');\n      this.ctx.beginPath();\n      this.ctx.rect(0, 0, width, height);\n      this.ctx.fillStyle = gradient;\n      this.ctx.fill();\n      this.ctx.closePath();\n\n      if (this.selectedHeight) {\n        this.ctx.beginPath();\n        this.ctx.strokeStyle = 'white';\n        this.ctx.lineWidth = 5;\n        this.ctx.rect(0, this.selectedHeight - 5, width, 10);\n        this.ctx.stroke();\n        this.ctx.closePath();\n      }\n    }\n\n    onMouseUp(evt) {\n      this.mousedown = false;\n    }\n\n    onMouseDown(evt) {\n      this.mousedown = true;\n      this.selectedHeight = evt.offsetY;\n      this.draw();\n      this.emitColor(evt.offsetX, evt.offsetY);\n    }\n\n    onMouseMove(evt) {\n      if (this.mousedown) {\n        this.selectedHeight = evt.offsetY;\n        this.draw();\n        this.emitColor(evt.offsetX, evt.offsetY);\n      }\n    }\n\n    emitColor(x, y) {\n      const rgbaColor = this.getColorAtPosition(x, y);\n      this.color.emit(rgbaColor);\n    }\n\n    getColorAtPosition(x, y) {\n      const imageData = this.ctx.getImageData(x, y, 1, 1).data;\n      return 'rgba(' + imageData[0] + ',' + imageData[1] + ',' + imageData[2] + ',1)';\n    }\n\n  }\n\n  ColorSliderComponent.ɵfac = function ColorSliderComponent_Factory(t) {\n    return new (t || ColorSliderComponent)();\n  };\n\n  ColorSliderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ColorSliderComponent,\n    selectors: [[\"app-color-slider\"]],\n    viewQuery: function ColorSliderComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvas = _t.first);\n      }\n    },\n    hostBindings: function ColorSliderComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"mouseup\", function ColorSliderComponent_mouseup_HostBindingHandler($event) {\n          return ctx.onMouseUp($event);\n        }, false, i0.ɵɵresolveWindow);\n      }\n    },\n    outputs: {\n      color: \"color\"\n    },\n    decls: 2,\n    vars: 0,\n    consts: [[\"width\", \"50\", \"height\", \"250\", 1, \"color-slider\", 3, \"mousedown\", \"mousemove\"], [\"canvas\", \"\"]],\n    template: function ColorSliderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"canvas\", 0, 1);\n        i0.ɵɵlistener(\"mousedown\", function ColorSliderComponent_Template_canvas_mousedown_0_listener($event) {\n          return ctx.onMouseDown($event);\n        })(\"mousemove\", function ColorSliderComponent_Template_canvas_mousemove_0_listener($event) {\n          return ctx.onMouseMove($event);\n        });\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\".color-slider[_ngcontent-%COMP%]:hover{cursor:pointer}\"]\n  });\n  return ColorSliderComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}