{"ast":null,"code":"import { exhaustMap, take } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/auth.service\";\nexport let AuthInterceptor = /*#__PURE__*/(() => {\n  class AuthInterceptor {\n    constructor(authService) {\n      this.authService = authService;\n    }\n\n    intercept(request, next) {\n      return this.authService.authenticatedUserSubject.pipe(take(1), exhaustMap(authUser => {\n        let modifiedReq = request;\n\n        if (authUser) {\n          modifiedReq = request.clone({\n            headers: request.headers.append('Authorization', authUser.token.type + ' ' + authUser.token.token)\n          });\n        }\n\n        return next.handle(modifiedReq);\n      }));\n    }\n\n  }\n\n  AuthInterceptor.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)(i0.ɵɵinject(i1.AuthService));\n  };\n\n  AuthInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n  return AuthInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}