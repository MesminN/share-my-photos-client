{"ast":null,"code":"export class Utils {\n  constructor(carouselProperties) {\n    this.carouselProperties = carouselProperties;\n  }\n\n  get images() {\n    return this.carouselProperties.images;\n  }\n\n  get margin() {\n    return this.carouselProperties.margin;\n  }\n\n  get overflowCellsLimit() {\n    if (this.images && this.isImagesLessCellLimit) {\n      let overflowCellsLimit = Math.floor((this.images.length - this.numberOfVisibleCells) / 2);\n\n      if (overflowCellsLimit < 0) {\n        overflowCellsLimit = 0;\n      }\n\n      return overflowCellsLimit;\n    } else {\n      return this.carouselProperties.overflowCellsLimit;\n    }\n  }\n\n  get isImagesLessCellLimit() {\n    return this.carouselProperties.overflowCellsLimit * 2 + this.numberOfVisibleCells > this.images.length;\n  }\n\n  get numberOfVisibleCells() {\n    return Math.ceil(this.visibleWidth / this.fullCellWidth);\n  }\n\n  get visibleCellsOverflowContainer() {\n    return this.numberOfVisibleCells * this.fullCellWidth - this.margin > this.visibleWidth;\n  }\n\n  get fullCellWidth() {\n    return this.carouselProperties.cellWidth + this.carouselProperties.margin;\n  }\n\n  get visibleWidth() {\n    return this.carouselProperties.visibleWidth || this.carouselProperties.cellsElement.parentElement.clientWidth;\n  }\n\n  updateProperties(carouselProperties) {\n    this.carouselProperties = carouselProperties;\n  }\n\n  getStartX(event) {\n    const touches = event.touches;\n    const carouselElementPosition = this.getCarouselElementPosition()['left'];\n    let startX;\n\n    if (touches) {\n      startX = touches[0].clientX - carouselElementPosition;\n    } else {\n      startX = event.clientX - carouselElementPosition;\n    }\n\n    return startX;\n  }\n\n  getMoveX(event) {\n    const touches = event.touches;\n    const carouselElementPositionX = this.getCarouselElementPosition()['left'];\n\n    if (touches) {\n      return touches[0].clientX - carouselElementPositionX;\n    } else {\n      return event.clientX - carouselElementPositionX;\n    }\n  }\n\n  getCarouselElementPosition() {\n    return this.carouselProperties.hostElement.getBoundingClientRect();\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}