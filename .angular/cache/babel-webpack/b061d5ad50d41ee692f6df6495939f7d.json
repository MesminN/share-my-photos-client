{"ast":null,"code":"import { tap } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"src/app/shared/components/loading-spinner/loading-spinner.component\";\nimport * as i5 from \"@angular/forms\";\n\nfunction AuthComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.error);\n  }\n}\n\nfunction AuthComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelement(1, \"app-loading-spinner\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AuthComponent_form_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"form\", 7, 8);\n    i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_form_4_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n\n      const _r3 = i0.ɵɵreference(1);\n\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onSubmit(_r3);\n    });\n    i0.ɵɵelementStart(2, \"div\", 9);\n    i0.ɵɵelementStart(3, \"label\", 10);\n    i0.ɵɵtext(4, \"First Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 9);\n    i0.ɵɵelementStart(7, \"label\", 12);\n    i0.ɵɵtext(8, \"Last Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 14);\n    i0.ɵɵelementStart(11, \"label\", 15);\n    i0.ɵɵtext(12, \"E-Mail\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(13, \"input\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 14);\n    i0.ɵɵelementStart(15, \"label\", 17);\n    i0.ɵɵtext(16, \"Password\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(17, \"input\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"div\", 19);\n    i0.ɵɵelementStart(19, \"button\", 20);\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(21, \" | \");\n    i0.ɵɵelementStart(22, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function AuthComponent_form_4_Template_button_click_22_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.onSwitchMode();\n    });\n    i0.ɵɵtext(23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _r3 = i0.ɵɵreference(1);\n\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hidden\", ctx_r2.isLoginMode);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"required\", !ctx_r2.isLoginMode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"hidden\", ctx_r2.isLoginMode);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"required\", !ctx_r2.isLoginMode);\n    i0.ɵɵadvance(10);\n    i0.ɵɵproperty(\"disabled\", !_r3.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.isLoginMode ? \"Login\" : \"Sign Up\", \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" Switch to \", ctx_r2.isLoginMode ? \"Sign Up\" : \"Login\", \" \");\n  }\n}\n\nexport let AuthComponent = /*#__PURE__*/(() => {\n  class AuthComponent {\n    constructor(authService, router) {\n      this.authService = authService;\n      this.router = router;\n      this.isLoginMode = true;\n      this.isLoading = false;\n      this.error = null;\n    }\n\n    ngOnInit() {}\n\n    onSwitchMode() {\n      this.isLoginMode = !this.isLoginMode;\n    }\n\n    onSubmit(authForm) {\n      if (!authForm.valid) {\n        return;\n      }\n\n      this.isLoading = true;\n      let user = {\n        email: authForm.value.email\n      };\n\n      if (!this.isLoginMode) {\n        user.firstName = authForm.value.firstName;\n        user.lastName = authForm.value.lastName;\n      }\n\n      const password = authForm.value.password;\n      let authObservable;\n\n      if (this.isLoginMode) {\n        authObservable = this.authService.login(user.email, password).pipe(tap(user => {\n          if (this.authService.isValidToken(user.token)) {\n            this.router.navigate(['/']);\n          }\n        }));\n      } else {\n        authObservable = this.authService.signUp(user, password);\n      }\n\n      authObservable.subscribe(responseData => {\n        this.isLoading = false;\n        console.log(responseData);\n      }, error => {\n        this.isLoading = false;\n        this.error = error;\n        console.log(error);\n      });\n      console.log(authForm);\n      authForm.reset();\n    }\n\n  }\n\n  AuthComponent.ɵfac = function AuthComponent_Factory(t) {\n    return new (t || AuthComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  AuthComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AuthComponent,\n    selectors: [[\"app-auth\"]],\n    decls: 5,\n    vars: 3,\n    consts: [[1, \"row\"], [1, \"col-xs-12\", \"col-md-6\", \"col-md-offset-3\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"style\", \"text-align: center;\", 4, \"ngIf\"], [3, \"ngSubmit\", 4, \"ngIf\"], [1, \"alert\", \"alert-danger\"], [2, \"text-align\", \"center\"], [3, \"ngSubmit\"], [\"authForm\", \"ngForm\"], [1, \"form-group\", 3, \"hidden\"], [\"for\", \"firstName\"], [\"type\", \"text\", \"id\", \"firstName\", \"ngModel\", \"\", \"name\", \"firstName\", 1, \"form-control\", 3, \"required\"], [\"for\", \"lastName\"], [\"type\", \"text\", \"id\", \"lastName\", \"ngModel\", \"\", \"name\", \"lastName\", 1, \"form-control\", 3, \"required\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"ngModel\", \"\", \"name\", \"email\", \"required\", \"\", \"email\", \"\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"ngModel\", \"\", \"name\", \"password\", \"required\", \"\", \"minlength\", \"6\", 1, \"form-control\"], [2, \"margin-top\", \"5px\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function AuthComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵtemplate(2, AuthComponent_div_2_Template, 3, 1, \"div\", 2);\n        i0.ɵɵtemplate(3, AuthComponent_div_3_Template, 2, 0, \"div\", 3);\n        i0.ɵɵtemplate(4, AuthComponent_form_4_Template, 24, 7, \"form\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.error);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n      }\n    },\n    directives: [i3.NgIf, i4.LoadingSpinnerComponent, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.NgForm, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel, i5.RequiredValidator, i5.EmailValidator, i5.MinLengthValidator],\n    styles: [\"\"]\n  });\n  return AuthComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}